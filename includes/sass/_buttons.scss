@use "variables" as var;

button.top_button,
#close_button {
	color: var(--document-text-color);
}

#music_button {
	right: 20px;
	div.pause {
		display: none;
	}

	&.is-playing {
		position: fixed;
		div.play {
			display: none;
		}
		div.pause {
			display: block;
		}
	}
}

#close_button {
	position: fixed;
	bottom: 52px;
	bottom: max(52px, calc(44px + #{var.$iX-bottom}));
	right: 0px;
	z-index: 13;
	top: unset;
	transition: var.$pop-transition, var.$hover-duration box-shadow ease-in-out, var.$hover-duration bottom ease-in-out,
		var.$hover-duration right ease-in-out;
	transform: scale(0.7) rotate(0deg);
	&:not(.show) {
		box-shadow: none;
		svg path {
			transition: var.$hover-duration fill ease-in-out;
			&:last-of-type {
				fill: var(--link-color);
			}
			&:first-of-type {
				fill: rgba(255, 255, 255, 0);
			}
		}
	}
	&.show {
		box-shadow: 0px -1px 4px rgba(84, 52, 4, 0.5);
		transform: scale(1) translate(-20px, 32px) rotate(-180deg);
		transform: scale(1) translate(-20px, max(32px, calc(24px + #{var.$iX-bottom}))) rotate(-180deg);
		@media (hover: hover) {
			&:hover {
				transform: scale(1.2) translate(-17px, 27px) rotate(-180deg);
				transform: scale(1.2) translate(-17px, max(27px, calc(20px + #{var.$iX-bottom}))) rotate(-180deg);
			}
		}
		&:focus,
		&:active {
			transform: scale(1.1) translate(-18px, 29px) rotate(-180deg);
			transform: scale(1.1) translate(-18px, max(29px, calc(22px + #{var.$iX-bottom}))) rotate(-180deg);
		}
	}
	@media screen and (min-width: var.$break-md) {
		bottom: 20px;
		right: 20px;
		transform: scale(1) rotate(0deg);
		&.show {
			transform: rotate(-180deg);
		}
	}
}
aside.slider {
	padding-bottom: 100px;
	transform: translateY(100px);
	transition: var.$pop-transition;
	&.hide {
		transform: translateY(230px);
	}
}
