@use "variables" as var;

html {
	line-height: 1.5;
	background: var(--relay-blue);
	color: var(--text-primary-color);
}
body {
	background: var(--relay-blue);
}

.container {
	display: flex;
	flex-direction: column;
	align-items: stretch;
	background-color: var(--background-color);
	&:before,
	&:after {
		background: var(--relay-blue);
	}
}

$statusbar: var.$iX-top;
#statusbar {
	height: 0;
	height: $statusbar;
	position: fixed;
	top: 0;
	right: 0;
	left: 0;
	z-index: 9;
	pointer-events: none;
	background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

#nav_content {
	background-color: var(--connected-blue);
	&.home {
		@include var.connected_background(40s);
	}
	text-align: center;
	padding: 0;
	overflow-x: auto;
	.nav_content--items {
		display: inline-flex;
		flex-direction: row;
		justify-content: flex-start;
		align-items: stretch;
		a {
			padding: var(--space-between-md) var(--space-between-sm);
			white-space: nowrap;
			span.need_space {
				display: none;
			}
			@media screen and (min-width: var.$break-xs) {
				padding: var(--space-between-md);
			}
			@media screen and (min-width: var.$break-sm) {
				span.need_space {
					display: inline;
				}
			}

			&.active {
				opacity: 1;
				font-weight: bold;
				text-decoration: none;
			}
			@media (hover: hover) {
				&:hover {
					background: var(--element-hover-color);
				}
			}
		}
	}
}
nav.nav_container {
	position: relative;
	// To prevent margins of elements before/after from collapsing
	height: 1px;
	#nav_content {
		position: absolute;
		right: 0;
		left: 0;
		top: 0;

		z-index: 10;
	}
	&.sticky {
		#nav_content {
			position: fixed;
			padding-top: $statusbar;
		}
	}
}

:root {
	--nav-height: 53px;
}

section {
	width: 100%;
	margin-left: auto;
	margin-right: auto;
	margin-top: var(--space-between-lg);
	padding: 0 var(--space-side-padding);
	padding-left: max(var(--space-side-padding), #{var.$iX-left});
	padding-right: max(var(--space-side-padding), #{var.$iX-right});
	pointer-events: none;
	&.navigate_with_mobile_menu {
		display: none;
		padding-top: calc(var(--nav-height) + var(--space-side-padding));
		padding-top: calc(var(--nav-height) + var(--space-side-padding) + #{var.$iX-top});
		margin-top: calc(-1 * #{var.$iX-top});
		&.active {
			display: block;
		}
		h2 {
			display: none;
		}
	}
}
.section_group {
	pointer-events: all;
}
.section_group--list {
	&:not(:first-of-type) {
		margin-top: var(--space-between-lg);
	}
}
@media screen and (min-width: var.$break-sm) {
	:root {
		--nav-height: 56px;
	}

	section {
		&.navigate_with_mobile_menu {
			// padding-top: 56px + 16px;
			// padding-top: calc(56px + 16px + #{var.$iX-top});
		}
	}
}
@media screen and (min-width: var.$break-md) {
	:root {
		--nav-height: 59px;
	}

	section {
		max-width: var.$readability-width;
		&.large_columns {
			max-width: 1400px;
			&:not(.navigate_with_mobile_menu) {
				padding-top: var(--space-between-lg);
			}
		}

		&.navigate_with_mobile_menu {
			margin-top: var(--space-between-lg);
			padding-top: var(--nav-height) + var(--space-side-padding);
			padding-top: calc(var(--nav-height) + #{var.$iX-top});

			display: block;
			&:not(:last-of-type) {
				margin-bottom: calc(-1 * (var(--nav-height)));
				margin-bottom: calc(-1 * (var(--nav-height) + #{var.$iX-top}));
			}

			h2 {
				margin-top: 0;
				margin-bottom: var(--space-between-md);
				padding-top: var(--space-between-lg);
				display: block;
			}
			&:not(:first-of-type) h2 {
				border-top: 1px solid var(--element-hover-color);
			}
		}
	}

	.section_group {
		display: flex;
		flex-direction: row;
		align-items: flex-start;
		.section_group--list {
			margin-top: 0;
			// 1/3 minus half a margin
			flex-basis: calc((100% / 3) - (var(--space-between-lg) / 2));
		}
		.section_group--list + .section_group--list {
			margin-left: var(--space-between-lg);
		}
	}
}
