@use "variables" as var;
@use "rule-slider";

@font-face {
	font-family: 'BlackChancery';
	src: url('/fonts/BlackChancery.eot');
	src: url('/fonts/BlackChancery.eot?#iefix') format('embedded-opentype'),
		url('/fonts/BlackChancery.woff2') format('woff2'), url('/fonts/BlackChancery.woff') format('woff'),
		url('/fonts/BlackChancery.ttf') format('truetype');
	font-weight: 100;
	font-style: normal;
	font-display: swap;
}

:root {
	--background-color: black;
	--text-primary-color: #543404;
	--link-color: #d7a457;
	--space-between-lg: 32px;
	font-size: 14px;
}

html {
	line-height: 1.5;
	background-color: var(--background-color);
	color: var(--text-primary-color);
}

body {
}

main {
	font-family: -apple-system-ui-serif, ui-serif, Georgia, serif;
	max-width: var.$readability-width;
	margin: auto;
	padding: 24px 24px 100px;

	// Note that the border.svg file needs to contain
	// preserveAspectRatio="none" to be able to stretch the full element.
	// Via https://stackoverflow.com/a/56459700
	background-image: url(/images/parchment-border.svg),
		radial-gradient(107.69% 64.1% at 50.13% 51.34%, rgba(255, 245, 225, 0.7) 0%, rgba(255, 218, 184, 0.7) 100%),
		url(/images/parchment-background.jpg);
	background-position: center;
	background-repeat: no-repeat;
	background-size: 100% 100%, cover, cover;
}

#active_date {
	text-align: center;
	margin: 5px 0 22px;
}

h1,
h2 {
	font-family: 'BlackChancery';
}
h1 {
	text-align: center;
	font-size: 3.7rem;
	line-height: 96%;
	margin: 0;
}

h2 {
	font-size: 1.7rem;
	margin: var(--space-between-lg) 0 4px;
}

ol {
	margin: 0;
	padding-left: 26px;
}

a:not(#back_button) {
	padding: 2px 4px;
	margin: -2px -4px;
	border-radius: 4px;
	transition: background 100ms;
	background: rgba(215, 164, 87, 0);

	&:link,
	&:visited {
		text-decoration-color: var(--link-color);
		color: inherit;
	}
	@media (hover: hover) {
		&:hover,
		&:focus {
			text-decoration-color: var(--text-primary-color);
			color: var(--text-primary-color);
			background: var(--link-color);
		}
		&:active {
			text-decoration-color: black;
			color: black;
		}
	}
}

$transition_time: 750ms;
h2.rule_type,
li.rule {
	max-height: 150px;
	opacity: 1;
	transition: $transition_time max-height ease-in, $transition_time opacity ease-in;
	// transition-delay: 0ms;
	&.hidden {
		opacity: 0;
		max-height: 0px;
		// "duration + delay" should be equal to the JS delay for adding "gone" class
		transition: $transition_time max-height ease-out, $transition_time opacity ease-out;
		// transition-delay: 250ms;
		&.gone {
			display: none;
		}
	}
}

#back_button,
aside.slider {
	box-shadow: 0px 1px 4px rgba(84, 52, 4, 0.5);
}

#back_button svg {
	path:last-of-type {
		fill: var(--text-primary-color);
	}
}

@media screen and (min-width: var.$break-md) {
	:root {
		font-size: 16px;
	}
	main {
		margin: 32px auto 128px;
		padding: 48px 48px 64px;
	}
}

@media (prefers-color-scheme: dark) {
	/* :root {
		--background-color: #31373D;
		--text-primary-color: #FFFFFF;
		--text-secondary-color: #777777;
	} */
}
