@use "variables" as var;

:root {
	--search-height: 48px;
	@media screen and (min-width: var.$break-md) {
		--search-height: 56px;
	}
}

#custom_share_sheet,
#fixed_search {
	position: fixed;
	z-index: 20;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	bottom: calc(-1 * #{var.$iX-top});

	padding: 40px var(--space-side-padding) var(--space-side-padding) var(--space-side-padding);

	pointer-events: none;
	-webkit-user-select: none;
	-ms-user-select: none;
	user-select: none;

	transition-property: background, backdrop-filter, -webkit-backdrop-filter;
	transition-duration: var.$hover-duration;
	transition-timing-function: ease;

	background: rgba(0, 0, 0, 0);
	form {
		transition: var.$pop-transition;
		transform: translateY(-160px);
	}

	&.open {
		pointer-events: unset;
		-webkit-user-select: initial;
		-ms-user-select: initial;
		user-select: initial;

		background: rgba(0, 0, 0, 0.7);
		-webkit-backdrop-filter: blur(10px);
		backdrop-filter: blur(10px);
		@media (prefers-color-scheme: dark) {
			background: rgba(106, 106, 106, 0.3);
		}
		form {
			transform: translateY(200px);
			transform: translateY(calc(200px + #{var.$iX-top}));

			@media screen and (min-width: var.$break-md) {
				transform: translateY(0px);
			}
			@media screen and (min-width: var.$break-md) and (min-height: 500px) {
				transform: translateY(110px);
			}
		}
	}
}

.input_button_combo {
	width: 100%;
	position: relative;
	input[type='text'],
	input[type='search'] {
		width: 100%;
		box-shadow: var.$header-shadow;
		background: var(--background-color);
		border-radius: calc(var(--search-height) / 2);
		height: var(--search-height);
		padding-right: var(--search-height);
		padding-left: 16px;
		@media (prefers-color-scheme: dark) {
			border: 1px solid var(--connected-blue);
		}
		@media screen and (min-width: var.$break-md) {
			padding-left: 20px;
		}
	}

	button {
		position: absolute;
		right: 4px;
		top: 4px;
		@media screen and (min-width: var.$break-md) {
			right: 8px;
			top: 8px;
		}
	}
}
#share_button,
#search_button {
	color: var(--link-color);
	z-index: 21;
}
@mixin double_svg($active: false) {
	@if $active == false {
		svg {
			transition: var.$hover-duration opacity ease;
		}
		svg + svg {
			position: absolute;
			top: 0;
			left: 0;
			opacity: 0;
		}
	} @else {
		svg {
			opacity: 0;
		}
		svg + svg {
			opacity: 1;
		}
	}
}
#search_button {
	right: 20px;
	@include double_svg;
	&.open {
		transform: rotate(180deg) scale(1);
		@media (hover: hover) {
			&:hover {
				transform: rotate(180deg) scale(1.2);
			}
		}
		&:focus,
		&:active {
			transform: rotate(180deg) scale(1.1);
		}

		position: fixed;
		@include double_svg(true);
	}
}

#share_button {
	svg > g {
		-webkit-perspective: 100px;
		perspective: 100px;
	}
	svg > g > path {
		transform-origin: 0px;
		transition: var.$pop-transition;
	}
	&.open {
		svg > g > path:first-of-type {
			transform: translateY(-19px) rotateX(180deg);
		}
		svg > g > path:last-of-type {
			transform: translateY(4px);
		}
	}
}

#share_input {
	transition: 500ms border ease-in-out;
}

#custom_share_sheet {
	color: var(--text-primary-color);
	#share_field_combo button {
		@include double_svg;
	}
	p {
		text-align: center;
		margin-top: 8px;
		span {
			border: 1px solid var(--connected-green);
			background: var(--background-color);
			padding: 4px 16px;
			border-radius: 40px;
			opacity: 0;
			transition: 500ms opacity ease-in-out;
		}
	}
}
#custom_share_sheet.success {
	p span {
		opacity: 1;
	}
	#share_field_combo button {
		color: var(--connected-green);
		@include double_svg(true);
	}
	#share_input {
		border-color: var(--connected-green);
	}
}
